version: "2"

services:
  kafka:
    image: docker.io/bitnami/kafka
    container_name: kafka
    hostname: kafka
    ports:
#      - "9092:9092"
      - "9094:9094"
    networks:
      - net01
#    volumes:
#      - "/tmp/data/kafka:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  spark:
#    image: docker.io/bitnami/spark:3.4
    build: spark-master
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
    networks:
      - net01
    depends_on:
      - kafka
#    volumes:
#      - "/tmp/data/spark:/data"   
#      - "/tmp/data/spark:/src"

#  spark-worker:
#    image: docker.io/bitnami/spark:3.4
#    container_name: spark-worker
#    networks:
#      - net01
#    environment:
#      - SPARK_MODE=worker
#      - SPARK_MASTER_URL=spark://spark:7077
#      - SPARK_WORKER_MEMORY=1G
#      - SPARK_WORKER_CORES=1
#      - SPARK_RPC_AUTHENTICATION_ENABLED=no
#      - SPARK_RPC_ENCRYPTION_ENABLED=no
#      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#      - SPARK_SSL_ENABLED=no
#      - SPARK_USER=spark

  data_producer:
    build: data_producer
    container_name: data_producer
    networks:
      - net01
    depends_on:
      - kafka

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elastic
    hostname: elastic
    ports:
      - 9200:9200
    networks:
      - net01
    environment:   
      - xpack.security.enabled=false
      - discovery.type=single-node

  kafka-connect:
    build: kafka-connect
    container_name: kafka-connect
    depends_on:
      - kafka
      - elastic
    networks:
      - net01

networks:
  net01:
